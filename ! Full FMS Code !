function setup() { 
  // setup function will create main menu
  homeMenu();
}

// underneath the buttons is where all of our games will be
function homeMenu(){
  
  // reset elements when returning to home menu
  removeElements();
  
  createCanvas(1540, 700);
  
  //background
  background(300);

  //black rectangle
  fill(50);
  rect(0,0,1540,170);

  //bottom gold rectangle
  fill('gold');
  rect(0,170,1540,500);

  //links rectangle
  fill(300);
  rect(0,650,1540,50)
  
  //text Children / Toddlers
  textSize(100);
  stroke(0)
  text("Fine Motor Skills", 405, 120);
  
  //Connect The Dots Button 
  dots_button = createButton("Shades Of Color")
  dots_button.position(380, 220)
  dots_button.size(800,100)
  dots_button.style('color:black')
  dots_button.style('background-color: white')
  dots_button.style('font-size','36px')
  
  dots_button.mousePressed(scDisplaylv1); // input function for lvl 1 of Connecting the Dots
  
  //Sorting Shapes Victims Button 
  shape_button = createButton("Sorting Shapes")
  shape_button.position(380, 350)
  shape_button.size(800,100)
  shape_button.style('color:black')
  shape_button.style('background-color: white')
  shape_button.style('font-size','36px')
  
  shape_button.mousePressed(shapesOne); // input function for lvl 1 of Sorting Shapes
  
  //Math Problems Button 
  math_button = createButton("Math Problems")
  math_button.position(380, 480)
  math_button.size(800,100)
  math_button.style('color:black')
  math_button.style('background-color: white')
  math_button.style('font-size','36px')
  
  math_button.mousePressed(displaylvl1); // input functon for lvl 1 of MathProblems
  
}

// Math Problems code 
// Math problems display background function
function mpBackground(){
    createCanvas(1540, 700);
  
   //background
  background(300);
  
  //black rectangle
  fill(50);
  rect (0,0,1540,150);

  //white rectangle
  fill(300);
  rect (0,150,1540,510)
  
  //gold rectangle links
  fill('gold')
  rect (0,660,1540,40)
  
   //text "Math Problems"
  fill(300)
  textSize(100);
  stroke (0)
  text ("Math Problems", 440, 110);
  
  // back to home button
  homeB = createButton("Home");
  homeB.position(750, 600);
  homeB.size(90,40);
  homeB.style('color:black');
  homeB.style('background-color:gold');
  
  homeB.mousePressed(homeMenu);
  }

// (create or reset equation/feedback for lv1)
function displaylvl1(){
  
  // remove any previous buttons/elements
  removeElements();
  
  //display background
 mpBackground();
  
  // small instructions, only for lvl1
  fill('black');
  textSize(20);
  text ("Choose the correct answer to the equations above", 570, 440);
  
  // display lv1 equation
  fill('black');
  textSize(50);
  stroke(0);
  text("7 - 3 = ?", 705, 380);
    
  // display answer boxs 
  var correctA;
  var incorrectA;
  var incorrectA2;
  
  correctA = createButton("4");
  correctA.position(750, 470);
  correctA.size(90,60);
  correctA.style('color:black');
  correctA.style('background-color:gold');
  
  incorrectA = createButton("3");
  incorrectA.position(630, 470);
  incorrectA.size(90,60);
  incorrectA.style('color:black');
  incorrectA.style('background-color:gold');
  
  incorrectA2 = createButton("2");
  incorrectA2.position(870, 470);
  incorrectA2.size(90,60);
  incorrectA2.style('color:black');
  incorrectA2.style('background-color:gold');
  
  
   // display 'Correct!' feedback
  correctA.mousePressed(displayFBcL1);
 
  //display 'Incorrect!'
  incorrectA.mousePressed(displayFBincL1);
  
  incorrectA2.mousePressed(displayFBincL1);
  
  // feedback functions (lv1)
  // Correct feedback funciton lv1(will continue to lv2)
function displayFBcL1(){
  textSize(60);
  fill('green');
  stroke(0);
  text("Correct!",690,300);
  
  // create next button (when correct)
   let nextB = createButton("next");
  nextB.position(870, 600);
  nextB.size(90,40);
  nextB.style('color:black');
  nextB.style('background-color:gold');
  
  nextB.mousePressed(displaylvl2)
}

// incorrect feedback function lv1 (restarts lv1)
function displayFBincL1(){
  textSize(60);
  fill('red');
  stroke(0);
  text("Incorrect!",670,300);
  
  //create try again button
  var tryAgainB = createButton("Try Again")
  tryAgainB.position(630, 600);
  tryAgainB.size(90,40);
  tryAgainB.style('color:black');
  tryAgainB.style('background-color:gold');
  
  tryAgainB.mousePressed(displaylvl1);
}
}

// display lv2 function 
function displaylvl2(){
  
  // remove any previous buttons/elements
  removeElements();
  
  // background
  mpBackground();
  
  // display lv2 equation
  fill('black');
  textSize(50);
  stroke(0);
  text("11 + 13 = ?", 665, 400);
  
  // display answer boxs 
  var correctA;
  var incorrectA;
  var incorrectA2;
  var homeB;
  
  correctA = createButton("24");
  correctA.position(630, 470);
  correctA.size(90,60);
  correctA.style('color:black');
  correctA.style('background-color:gold');
  
  incorrectA = createButton("25");
  incorrectA.position(750, 470);
  incorrectA.size(90,60);
  incorrectA.style('color:black');
  incorrectA.style('background-color:gold');
  
  incorrectA2 = createButton("34");
  incorrectA2.position(870, 470);
  incorrectA2.size(90,60);
  incorrectA2.style('color:black');
  incorrectA2.style('background-color:gold');
  
   // display 'Correct!' feedback
  correctA.mousePressed(displayFBcL2);
 
  //display 'Incorrect!'
  incorrectA.mousePressed(displayFBincL2);
  
  incorrectA2.mousePressed(displayFBincL2);
  
  // feedback functions lv2
  
  // Correct feedback funciton lv1(will continue to lv2)
function displayFBcL2(){
  textSize(60);
  fill('green');
  stroke(0);
  text("Correct!",690,300);
  
  // create next button (when correct)
   let nextB = createButton("next");
  nextB.position(870, 600);
  nextB.size(90,40);
  nextB.style('color:black');
  nextB.style('background-color:gold');
  
  nextB.mousePressed(displaylvl3)
}

// incorrect feedback function lv2 (restarts lv2)
function displayFBincL2(){
  textSize(60);
  fill('red');
  stroke(0);
  text("Incorrect!",670,300);
  
  //create try again button
  var tryAgainB = createButton("Try Again")
  tryAgainB.position(630, 600);
  tryAgainB.size(90,40);
  tryAgainB.style('color:black');
  tryAgainB.style('background-color:gold');
  
  tryAgainB.mousePressed(displaylvl2);
  
}
}

// display lv3 function
function displaylvl3(){
  
  // remove any previous buttons/elements
  removeElements();
  
  // background
  mpBackground();
  
  // display lv3 equation
  fill('black');
  textSize(50);
  stroke(0);
  text("8 x 5 = ?", 700, 400);
  
  // display answer boxs 
  var correctA;
  var incorrectA;
  var incorrectA2;
  var homeB;
  
  correctA = createButton("40");
  correctA.position(750, 470);
  correctA.size(90,60);
  correctA.style('color:black');
  correctA.style('background-color:gold');
  
  incorrectA = createButton("45");
  incorrectA.position(630, 470);
  incorrectA.size(90,60);
  incorrectA.style('color:black');
  incorrectA.style('background-color:gold');
  
  incorrectA2 = createButton("13");
  incorrectA2.position(870, 470);
  incorrectA2.size(90,60);
  incorrectA2.style('color:black');
  incorrectA2.style('background-color:gold');
  
  // display 'Correct!' feedback
  correctA.mousePressed(displayFBcL3);
 
  //display 'Incorrect!'
  incorrectA.mousePressed(displayFBincL3);
  
  incorrectA2.mousePressed(displayFBincL3);

function displayFBcL3(){
  textSize(60);
  fill('green');
  stroke(0);
  text("Correct!",690,300);
  
  // create next button (when correct)
   let nextB = createButton("next");
  nextB.position(870, 600);
  nextB.size(90,40);
  nextB.style('color:black');
  nextB.style('background-color:gold');
  
  nextB.mousePressed(displaylvl4)
}

// incorrect feedback function lv3 (restarts lv3)
function displayFBincL3(){
  textSize(60);
  fill('red');
  stroke(0);
  text("Incorrect!",670,300);
  
  //create try again button
  var tryAgainB = createButton("Try Again")
  tryAgainB.position(630, 600);
  tryAgainB.size(90,40);
  tryAgainB.style('color:black');
  tryAgainB.style('background-color:gold');
  
  tryAgainB.mousePressed(displaylvl3);
}
}

// display lv4 function
function displaylvl4(){
  
  // remove any previous buttons/elements
  removeElements();
  
  // background
  mpBackground();
  
  // display lv4 equation
  fill('black');
  textSize(50);
  stroke(0);
  text("15 / 5 = ?", 685, 400);
  
  // display answer boxs/ home button
  var correctA;
  var incorrectA;
  var incorrectA2;
  var homeB;
  
  correctA = createButton("3");
  correctA.position(870, 470);
  correctA.size(90,60);
  correctA.style('color:black');
  correctA.style('background-color:gold');
  
  incorrectA = createButton("10");
  incorrectA.position(630, 470);
  incorrectA.size(90,60);
  incorrectA.style('color:black');
  incorrectA.style('background-color:gold');
  
  incorrectA2 = createButton("20");
  incorrectA2.position(750, 470);
  incorrectA2.size(90,60);
  incorrectA2.style('color:black');
  incorrectA2.style('background-color:gold');
  
   // display 'Correct!' feedback
  correctA.mousePressed(displayFBcL4);
 
  //display 'Incorrect!'
  incorrectA.mousePressed(displayFBincL4);
  
  incorrectA2.mousePressed(displayFBincL4);

  // correct feedback function lv4 (Player wins)
function displayFBcL4(){
  textSize(60);
  fill('green');
  stroke(0);
  text("Correct!",690,300);
  
  // create next button (when correct)
   let nextB = createButton("next");
  nextB.position(870, 600);
  nextB.size(90,40);
  nextB.style('color:black');
  nextB.style('background-color:gold');
  
  nextB.mousePressed(displayPW); // display Player Won menu
}

// incorrect feedback function lv4 (restarts lv4)
function displayFBincL4(){
  textSize(60);
  fill('red');
  stroke(0);
  text("Incorrect!",670,300);
  
  //create try again button
  var tryAgainB = createButton("Try Again")
  tryAgainB.position(630, 600);
  tryAgainB.size(90,40);
  tryAgainB.style('color:black');
  tryAgainB.style('background-color:gold');
  
  tryAgainB.mousePressed(displaylvl4);
}
}

// game over function (player won)
function displayPW(){
  
  // remove any previous buttons/elements
  removeElements();
  
  // background 
  mpBackground();
  
  // "Well Done!" text
  textSize(60);
  fill('green');
  stroke(0);
  text("Well Done!",660,350);
  
  // play again button
  var playAgainB = createButton("Play Again")
  playAgainB.position(750, 550);
  playAgainB.size(90,40);
  playAgainB.style('color:black');
  playAgainB.style('background-color:gold');
  
  playAgainB.mousePressed(displaylvl1); // goes back to lvl 1
}
// End of Math Problems code

//Start of Shape Sorting Code
function shapesOne () {
  
  removeElements();
  
  createCanvas(1540, 700);
  
  shapeOne = true
  shapeTwo = false
  shapeThree = false
  shapeFour = false
  
  shapeX = width/2;
  shapeY = height/2;
  
  radius = 87.5
  diameter = radius * 2
  
  shapesBackground()
  
  fill('blue')
  ellipse(shapeX, shapeY, diameter, diameter)
}

function shapesTwo () {
  
  removeElements();
  
  createCanvas(1540, 700);
  
  shapeX = width/2;
  shapeY = height/2;
  
  shapeOne = false
  shapeTwo = true
  shapeThree = false
  shapeFour = false
  
  radius = 100
  diameter = radius * 2
  
  shapesBackground()
  
  fill('red')
  circleTwo = ellipse(shapeX, shapeY, diameter, diameter)  
}

function shapesThree () {
  
  removeElements();
  
  createCanvas(1540, 700);
  
  shapeX = width/2;
  shapeY = height/2;
  
  shapeOne = false
  shapeTwo = false
  shapeThree = true
  shapeFour = false
  
  radius = 112.5
  diameter = radius * 2
  
  shapesBackground()
  
  fill('green')
  circleTwo = ellipse(shapeX, shapeY, diameter, diameter)
}

function shapesFour () {
  
  removeElements();
  
  createCanvas(1540, 700);
  
  shapeX = width/2;
  shapeY = height/2;
  
  shapeOne = false
  shapeTwo = false
  shapeThree = false
  shapeFour = true
  
  radius = 75
  diameter = radius * 2
  
  shapesBackground()
  
  fill('gold')
  circleTwo = ellipse(shapeX, shapeY, diameter, diameter)
}

function shapesBackground () {
  //background
  background(300);
  
  //black rectangle
  fill(50);
  rect (0,0,1540,150);

  //white rectangle
  fill(300);
  rect (0,150,1540,510)
  
  //gold rectangle links
  fill('gold')
  rect (0,660,1540,40)
  
   //text Fine Motor Skills
  fill(300)
  textSize(100);
  stroke (0)
  text ("Sorting Shapes", 440, 110);
  
  //Check Button 
  check = createButton ("Check")
  check.position (690, 575)
  check.size (150,50)
  check.style ('color:black')
  check.style ('background-color: rgb(211,207,207)')
  check.style ('font-size','20px')
  
  check.mousePressed (checkAnswer)
  
  //Greyed Out Circles
  fill ('rgb(209,204,204)')
  circleOne = circle (350,520,150)
  circleTwo = circle (1200,275,175)
  circleThree = circle (1200,500,200)
  circleFour = circle (350,285,225)
}

function mousePressed () {
  let d = dist(mouseX, mouseY, shapeX, shapeY)
  if(d<radius) {
    grabbed = true
  }
  else {
    grabbed = false
  }
}

function mouseReleased (){
  grabbed = false;
  print (shapeX, shapeY)
  
  if (shapeOne == true) {
    if (((shapeX >= 1195)&&(shapeX <= 1205))&&((shapeY >= 270)&&(shapeY <= 280))){
      answer = true;
      print (answer);
    }
    else {
      answer = false;
      print (answer);
    }
  }
  
  if (shapeTwo == true) {
    if (((shapeX >= 1195)&&(shapeX <= 1205))&&((shapeY >= 495)&&(shapeY <= 505))){
      answer = true;
      print (answer);
    }
    else {
      answer = false;
      print (answer);
    }
  }
  
  if (shapeThree == true) {
    if (((shapeX >= 345)&&(shapeX <= 355))&&((shapeY >= 280)&&(shapeY <= 290))){
      answer = true;
      print (answer);
    }
    else {
      answer = false;
      print (answer);
    }
  }
  
  if (shapeFour == true) {
    if (((shapeX >= 345)&&(shapeX <= 355))&&((shapeY >= 515)&&(shapeY <= 525))){
      answer = true;
      print (answer);
    }
    else {
      answer = false;
      print (answer);
    }
  }
}

function mouseDragged (){
  if(grabbed){
    shapeX = mouseX
    shapeY = mouseY  
    
  shapesBackground()
  
  if (shapeOne == true) {
    fill('blue')
    ellipse(shapeX, shapeY, diameter, diameter)
  }
  
  if (shapeTwo == true) {
    fill('red')
    circleTwo = ellipse(shapeX, shapeY, diameter, diameter)  
  }
  
  if (shapeThree == true) {
    fill('green')
    ellipse(shapeX, shapeY, diameter, diameter)
  }
  
  if (shapeFour == true) {
    fill('gold')
    ellipse(shapeX, shapeY, diameter, diameter)
  }
    
  }
}

function checkAnswer() {
  print("Answer Checked")
  if (answer == true) {
    correctAnswer()
  }
  if (answer == false) {
    incorrectAnswer()
  }
}

function correctAnswer () {
  correct = createButton ("Correct")
  correct.position (690, 200)
  correct.size (150,50)
  correct.style ('black')
  correct.style ('background-color: rgb(116,247,116)')
  correct.style ('font-size','25px')
  
  if ((shapeOne == true)||(shapeTwo == true)||(shapeThree == true)) {
    next = createButton ("Next Level")
    next.position (690, 500)
    next.size (150,50)
    next.style ('color:black')
    next.style ('background-color: rgb(211,207,207)')
    next.style ('font-size','20px')
  
    if (shapeOne == true) {
    next.mousePressed (shapesTwo)
    }
  
    if (shapeTwo == true) {
    next.mousePressed (shapesThree)
    }
  
    if (shapeThree == true) {
    next.mousePressed (shapesFour)
    }
  }
  
  if (shapeFour == true) {
    home = createButton ("Home Page")
    home.position (690, 500)
    home.size (150,50)
    home.style ('color:black')
    home.style ('background-color: rgb(211,207,207)')
    home.style ('font-size','20px')
    
    home.mousePressed (homeMenu)
  }
  
}

function incorrectAnswer() {
  incorrect = createButton ("Incorrect")
  incorrect.position (690, 200)
  incorrect.size (150,50)
  incorrect.style ('black')
  incorrect.style ('background-color: rgb(255,82,82)')
  incorrect.style ('font-size','25px')
  
  retry = createButton ("Retry")
  retry.position (690, 500)
  retry.size (150,50)
  retry.style ('color:black')
  retry.style ('background-color: rgb(211,207,207)')
  retry.style ('font-size','20px')
  
  if (shapeOne == true) {
    retry.mousePressed (shapesOne)
  }
  
  if (shapeTwo == true) {
    retry.mousePressed (shapesTwo)
  }
  
  if (shapeThree == true) {
    retry.mousePressed (shapesThree)
  }
  
  if (shapeFour == true) {
    retry.mousePressed (shapesFour)
  }
}
//End of Shape Sorting Code

//Start of Shades of Color code
function scBackground (){
  createCanvas(1540, 700);
  
  //background
  background(300);
  
  //black rectangle
  fill(50);
  rect (0,0,1540,150);

  //white rectangle
  fill(300);
  rect (0,150,1540,510)
  
  //gold rectangle links
  fill('gold')
  rect (0,660,1540,40)
  
   //text Shades Of Color
  fill(300)
  textSize(100);
  stroke (0)
  text ("Shades Of Color", 440, 110);
  
  // home button 
  homeB = createButton("Home");
  homeB.position(750, 600);
  homeB.size(90,40);
  homeB.style('color:black');
  homeB.style('background-color:gold');
  
  homeB.mousePressed(homeMenu);
}

function scDisplaylv1(){
  // setup for lvl 1
  removeElements();
  
  scBackground ();
  
  // small instructions, only for lvl1
  fill('black');
  textSize(20);
  text ("Select the color that stands out!", 655, 350);
  
  // create rectangle buttons
  var correctR = createButton("");
  correctR.position(750, 400);
  correctR.size(90,140);
  correctR.style('background-color:darkgray');
  
  correctR.mousePressed(scDisplayFBcL1);
  
  var incorrectR1 = createButton("");
  incorrectR1.position(660, 400);
  incorrectR1.size(90,140);
  incorrectR1.style('background-color:black');
  
  incorrectR1.mousePressed(scDisplayFBincL1);
  
   var incorrectR2 = createButton("");
  incorrectR2.position(840, 400);
  incorrectR2.size(90,140);
  incorrectR2.style('background-color:black');
  
  incorrectR2.mousePressed(scDisplayFBincL1);
  
  // feedback functions
  function scDisplayFBcL1(){
  textSize(60);
  fill('green');
  stroke(0);
  text("Correct!",690,300);
  
  // create next button (when correct)
   let nextB = createButton("next");
  nextB.position(870, 600);
  nextB.size(90,40);
  nextB.style('color:black');
  nextB.style('background-color:gold');
  
  nextB.mousePressed(scDisplaylv2)
}
  
  function scDisplayFBincL1(){
  textSize(60);
  fill('red');
  stroke(0);
  text("Incorrect!",670,300);
  
  //create try again button
  var tryAgainB = createButton("Try Again")
  tryAgainB.position(630, 600);
  tryAgainB.size(90,40);
  tryAgainB.style('color:black');
  tryAgainB.style('background-color:gold');
  
  tryAgainB.mousePressed(scDisplaylv1);
}
}

function scDisplaylv2(){
   // setup for lvl 2
  removeElements();
  
  scBackground ();
  
  // create rectangle buttons
  var correctR = createButton("");
  correctR.position(836, 400);
  correctR.size(90,140);
  correctR.style('background-color:green');
  
  correctR.mousePressed(scDisplayFBcL2);
  
  var incorrectR1 = createButton("");
  incorrectR1.position(660, 400);
  incorrectR1.size(90,140);
  incorrectR1.style('background-color:darkgreen');
  
  incorrectR1.mousePressed(scDisplayFBincL2);
  
   var incorrectR2 = createButton("");
  incorrectR2.position(749, 400);
  incorrectR2.size(90,140);
  incorrectR2.style('stroke:white');
  incorrectR2.style('background-color:darkgreen');
  
  incorrectR2.mousePressed(scDisplayFBincL2);
  
  // feedback functions
  function scDisplayFBcL2(){
  textSize(60);
  fill('green');
  stroke(0);
  text("Correct!",690,300);
  
  // create next button (when correct)
   let nextB = createButton("next");
  nextB.position(870, 600);
  nextB.size(90,40);
  nextB.style('color:black');
  nextB.style('background-color:gold');
  
  nextB.mousePressed(scDisplaylv3)
}
  
  function scDisplayFBincL2(){
  textSize(60);
  fill('red');
  stroke(0);
  text("Incorrect!",670,300);
  
  //create try again button
  var tryAgainB = createButton("Try Again")
  tryAgainB.position(630, 600);
  tryAgainB.size(90,40);
  tryAgainB.style('color:black');
  tryAgainB.style('background-color:gold');
  
  tryAgainB.mousePressed(scDisplaylv2);
}
}

function scDisplaylv3(){
   // setup for lvl 3
  removeElements();
  
  scBackground ();
  
  // create rectangle buttons
  var correctR = createButton("");
  correctR.position(660, 400);
  correctR.size(90,140);
  correctR.style('background-color:lightgreen');
  
  correctR.mousePressed(scDisplayFBcL3);
  
  var incorrectR1 = createButton("");
  incorrectR1.position(836, 400);
  incorrectR1.size(90,140);
  incorrectR1.style('background-color:lime');
  
  incorrectR1.mousePressed(scDisplayFBincL3);
  
   var incorrectR2 = createButton("");
  incorrectR2.position(749, 400);
  incorrectR2.size(90,140);
  incorrectR2.style('stroke:white');
  incorrectR2.style('background-color:lime');
  
  incorrectR2.mousePressed(scDisplayFBincL3);
  
  // feedback functions
  function scDisplayFBcL3(){
  textSize(60);
  fill('green');
  stroke(0);
  text("Correct!",690,300);
  
  // create next button (when correct)
   let nextB = createButton("next");
  nextB.position(870, 600);
  nextB.size(90,40);
  nextB.style('color:black');
  nextB.style('background-color:gold');
  
  nextB.mousePressed(scDisplaylv4)
}
  
  function scDisplayFBincL3(){
  textSize(60);
  fill('red');
  stroke(0);
  text("Incorrect!",670,300);
  
  //create try again button
  var tryAgainB = createButton("Try Again")
  tryAgainB.position(630, 600);
  tryAgainB.size(90,40);
  tryAgainB.style('color:black');
  tryAgainB.style('background-color:gold');
  
  tryAgainB.mousePressed(scDisplaylv3);
}
}

function scDisplaylv4(){
   // setup for lvl 4
  removeElements();
  
  scBackground ();
  
  // create rectangle buttons
  var correctR = createButton("");
  correctR.position(836, 400);
  correctR.size(90,140);
  correctR.style('background-color:darkblue');
  
  correctR.mousePressed(scDisplayFBcL4);
  
  var incorrectR1 = createButton("");
  incorrectR1.position(749, 400);
  incorrectR1.size(90,140);
  incorrectR1.style('background-color:navy');
  
  incorrectR1.mousePressed(scDisplayFBincL4);
  
   var incorrectR2 = createButton("");
  incorrectR2.position(660, 400);
  incorrectR2.size(90,140);
  incorrectR2.style('stroke:white');
  incorrectR2.style('background-color:navy');
  
  incorrectR2.mousePressed(scDisplayFBincL4);
  
  // feedback functions
  function scDisplayFBcL4(){
  textSize(60);
  fill('green');
  stroke(0);
  text("Correct!",690,300);
  
  // create next button (when correct)
   let nextB = createButton("next");
  nextB.position(870, 600);
  nextB.size(90,40);
  nextB.style('color:black');
  nextB.style('background-color:gold');
  
  nextB.mousePressed(socPW);
}
  
  function scDisplayFBincL4(){
  textSize(60);
  fill('red');
  stroke(0);
  text("Incorrect!",670,300);
  
  //create try again button
  var tryAgainB = createButton("Try Again")
  tryAgainB.position(630, 600);
  tryAgainB.size(90,40);
  tryAgainB.style('color:black');
  tryAgainB.style('background-color:gold');
  
  tryAgainB.mousePressed(scDisplaylv4);
}
}

function socPW(){
   // remove any previous buttons/elements
  removeElements();
  
  // background 
  scBackground();
  
  // "Well Done!" text
  textSize(60);
  fill('green');
  stroke(0);
  text("Well Done!",660,350);
  
  // play again button
  var playAgainB = createButton("Play Again")
  playAgainB.position(750, 550);
  playAgainB.size(90,40);
  playAgainB.style('color:black');
  playAgainB.style('background-color:gold');
  
  playAgainB.mousePressed(scDisplaylv1); // goes back to lvl 1
}
//End of Shades of Color code
